######## JS Project of creating a E-Commerce Website which contains Buying & Selling product pages along with cart functionality where users can add products to the cart and it is visible on new page ##########

##### In src/App.js, keep only the App component #####

import React from 'react';
import { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';
import SellPage from './pages/SellPage';
import BuyPage from './pages/BuyPage';
import CartPage from './pages/CartPage';

function App() {
  return (
    <Router>
      <div>
        <nav>
          <ul>
            <li>
              <Link to="/">Buy</Link>
            </li>
            <li>
              <Link to="/sell">Sell</Link>
            </li>
            <li>
              <Link to="/cart">Cart</Link>
            </li>
          </ul>
        </nav>

        <Routes>
          <Route path="/" element={<BuyPage />} />
          <Route path="/sell" element={<SellPage />} />
          <Route path="/cart" element={<CartPage />} />
        </Routes>
      </div>
    </Router>
  );
}

export default App;

##### Create a Buy Page using "src/pages/BuyPage.js" #####

import React, { useState, useEffect } from 'react';

function BuyPage() {
  const [products, setProducts] = useState([]);

  useEffect(() => {
    // Here you would typically fetch products from your backend API
    // For now, we'll use mock data
    const mockProducts = [
      { id: 1, name: 'Product 1', description: 'Description 1', price: 19.99 },
      { id: 2, name: 'Product 2', description: 'Description 2', price: 29.99 },
      { id: 3, name: 'Product 3', description: 'Description 3', price: 39.99 },
    ];
    setProducts(mockProducts);
  }, []);

  const addToCart = (product) => {
    // Here you would typically update the cart in your state management solution or local storage
    console.log('Added to cart:', product);
  };

  return (
    <div>
      <h2>Buy Products</h2>
      <div className="product-list">
        {products.map(product => (
          <div key={product.id} className="product-card">
            <h3>{product.name}</h3>
            <p>{product.description}</p>
            <p>Price: ${product.price}</p>
            <button onClick={() => addToCart(product)}>Add to Cart</button>
          </div>
        ))}
      </div>
    </div>
  );
}

export default BuyPage;

##### Create a Sell Page "src/pages/SellPage.js" #####

import React, { useState } from 'react';

function SellPage() {
  const [product, setProduct] = useState({ name: '', description: '', price: '' });

  const handleSubmit = (e) => {
    e.preventDefault();
    // Here you would typically send the product data to your backend API
    console.log('Product submitted:', product);
    // Reset the form
    setProduct({ name: '', description: '', price: '' });
  };

  const handleChange = (e) => {
    const { name, value } = e.target;
    setProduct(prevProduct => ({ ...prevProduct, [name]: value }));
  };

  return (
    <div>
      <h2>Sell a Product</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label htmlFor="name">Product Name:</label>
          <input
            type="text"
            id="name"
            name="name"
            value={product.name}
            onChange={handleChange}
            required
          />
        </div>
        <div>
          <label htmlFor="description">Description:</label>
          <textarea
            id="description"
            name="description"
            value={product.description}
            onChange={handleChange}
            required
          />
        </div>
        <div>
          <label htmlFor="price">Price:</label>
          <input
            type="number"
            id="price"
            name="price"
            value={product.price}
            onChange={handleChange}
            required
          />
        </div>
        <button type="submit">List Product</button>
      </form>
    </div>
  );
}

export default SellPage;

##### Create a Cart Page "src/pages/CartPage.js" #####

import React, { useState, useEffect } from 'react';

function CartPage() {
  const [cartItems, setCartItems] = useState([]);

  useEffect(() => {
    // Here you would typically fetch cart items from your state management solution or local storage
    // For now, we'll use mock data
    const mockCartItems = [
      { id: 1, name: 'Product 1', price: 19.99, quantity: 2 },
      { id: 2, name: 'Product 2', price: 29.99, quantity: 1 },
    ];
    setCartItems(mockCartItems);
  }, []);

  const removeFromCart = (itemId) => {
    setCartItems(prevItems => prevItems.filter(item => item.id !== itemId));
  };

  const total = cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);

  return (
    <div>
      <h2>Your Cart</h2>
      {cartItems.length === 0 ? (
        <p>Your cart is empty</p>
      ) : (
        <div>
          {cartItems.map(item => (
            <div key={item.id} className="cart-item">
              <h3>{item.name}</h3>
              <p>Price: ${item.price}</p>
              <p>Quantity: {item.quantity}</p>
              <button onClick={() => removeFromCart(item.id)}>Remove</button>
            </div>
          ))}
          <div className="cart-total">
            <h3>Total: ${total.toFixed(2)}</h3>
          </div>
        </div>
      )}
    </div>
  );
}

export default CartPage;

##### (Optional in task ) To integrate with Express API, one can use axios to make HTTP requests. Here's an example of how you might fetch products in the BuyPage #####

import axios from 'axios';

// In your useEffect:
useEffect(() => {
  const fetchProducts = async () => {
    try {
      const response = await axios.get('http://your-api-url/products');
      setProducts(response.data);
    } catch (error) {
      console.error('Error fetching products:', error);
    }
  };

  fetchProducts();
}, []);
############################################################################################# THE END #############################################################################################################
